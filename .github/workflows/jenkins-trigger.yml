name: Jenkins Trigger

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Extract Branch Name
        id: extract_branch
        run: |
          BRANCH_NAME=$(curl -s "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.number }}" | jq -r '.head.ref')
          echo "::set-output name=branch::$BRANCH_NAME"

      - name: Trigger Jenkins Job
        run: |
          BRANCH_NAME="${{ steps.extract_branch.outputs.branch }}"

          if [[ "$BRANCH_NAME" == renovate* ]]: then
            echo "Skipping workflow execution for branch starting with 'renovate'."
            exit 0
          fi
          
          JENKINS_USERNAME="${{ secrets.JENKINS_USERNAME }}"
          JENKINS_API_TOKEN="${{ secrets.JENKINS_API_TOKEN }}"
          RESPONSE_CODE=$(curl -X POST -u "$JENKINS_USERNAME:$JENKINS_API_TOKEN" -o /dev/null -w "%{http_code}" "https://builds.gbif.org/job/ipt-pr/buildWithParameters?token=github-token-test&BRANCH_NAME=$BRANCH_NAME")

          if [ "$RESPONSE_CODE" -ne 201 ]; then
            echo "Failed to trigger Jenkins job. HTTP Response Code: $RESPONSE_CODE"
            exit 1
          fi

      - name: Check Jenkins Job Status
        id: check_jenkins_job
        run: |
          BRANCH_NAME="${{ steps.extract_branch.outputs.branch }}"

          if [[ "$BRANCH_NAME" == renovate* ]]: then
            echo "Skipping workflow execution for branch starting with 'renovate'."
            exit 0
          fi
        
          BUILD_QUEUE_NUMBER=$(curl -X POST -u "$JENKINS_USERNAME:$JENKINS_API_TOKEN" -s -o /dev/null -w "%{http_code}" "https://builds.gbif.org/job/ipt-pr/buildWithParameters?token=github-token-test&BRANCH_NAME=$BRANCH_NAME")
          echo "$BUILD_QUEUE_NUMBER"

          while true; do
            BUILD_STATUS=$(curl -s "https://builds.gbif.org/queue/item/$BUILD_QUEUE_NUMBER/api/json" | jq -r '.executable.result')
            if [ "$BUILD_STATUS" == "SUCCESS" ]; then
              echo "Jenkins job has succeeded."
              break
            elif [ "$BUILD_STATUS" == "FAILURE" ]; then
              echo "Jenkins job has failed."
              exit 1
            else
              echo "Jenkins job is still running..."
              sleep 60  # Sleep for 60 seconds before checking again
            fi
          done
